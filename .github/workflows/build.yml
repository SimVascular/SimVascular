# GitHub build workflow configuration file.
#
# This files defines the GitHub build actions which perform the following steps:
# 
#   - Building SimVascular on all supported platforms
#   - Creating installers for all supported platforms
#   - Uploading the generated installers as artifacts
#   - Uploading the generated installers as release assets (only for releases)

name: Build
on: [push, pull_request]
jobs:
  build-macos-big-sur:
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        shell: bash
        run: |
          export TERM=xterm-256color
          export CPATH='/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include:/opt/local/include'
          export LIBRARY_PATH='/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib:/opt/local/lib'
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
          export CXX=/usr/bin/g++
          export CC=/usr/bin/gcc
          mkdir Build
          cd Build
          cmake .. -DSV_ENABLE_DISTRIBUTION=ON
          make -j3
      - name: Create installer
        shell: bash
        run: |
          cd Build/SimVascular-build
          cpack
          cp SimVascular*.dmg ../../SimVascular-macOS-BigSur.dmg
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: macOS Big Sur  Installer
          path: SimVascular-macOS-BigSur.dmg
          if-no-files-found: error
      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: SimVascular-macOS-BigSur.dmg
          asset_name: SimVascular-${{github.ref_name}}-macOS-BigSur.dmg
          tag: ${{ github.ref }}
          
  build-ubuntu-20:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        shell: bash
        run: sudo apt-get install libglu1-mesa-dev libxt-dev libxi-dev libglew-dev libxmu-dev gcc-8 g++-8 qt5-default zip
      - name: Build
        shell: bash
        run: |
          export CC=/usr/bin/gcc-8
          export CXX=/usr/bin/g++-8
          mkdir Build
          cd Build
          cmake .. -DSV_ENABLE_DISTRIBUTION=ON
          make -j2
      - name: Create installer
        shell: bash
        run: |
          cd Build/SimVascular-build
          cpack
          cp SimVascular*.deb ../../SimVascular-Ubuntu-20.deb
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Ubuntu 20 Installer
          path: SimVascular-Ubuntu-20.deb
          if-no-files-found: error
      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: SimVascular-Ubuntu-20.deb
          asset_name: SimVascular-${{github.ref_name}}-Ubuntu-20.deb
          tag: ${{ github.ref }}
  build-ubuntu-18:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get install libglu1-mesa-dev libxt-dev libxi-dev libglew-dev libxmu-dev qt5-default zip
      - name: Build
        shell: bash
        run: |
          mkdir Build
          cd Build
          cmake .. -DSV_ENABLE_DISTRIBUTION=ON
          make -j2
      - name: Create installer
        shell: bash
        run: |
          cd Build/SimVascular-build
          cpack
          cp SimVascular*.deb ../../SimVascular-Ubuntu-18.deb
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Ubuntu 18 Installer
          path: SimVascular-Ubuntu-18.deb
          if-no-files-found: error
      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: SimVascular-Ubuntu-18.deb
          asset_name: SimVascular-${{github.ref_name}}-Ubuntu-18.deb
          tag: ${{ github.ref }}
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          install-dir: C:\cygwin64
          packages: make tcl zip gzip tar patch wget
      - name: Install Visual Studio BuildTools
        run: |
          choco install visualstudio2017buildtools visualstudio2017-workload-vctools
      - name: Build
        run: |
          cd BuildWithMake
          dos2unix ./quick-build-windows.sh
          C:\cygwin64\bin\bash.exe -c "./build_windows_github.bat"
          cp Release/SimVascular-*-Windows-64bit-bundle.exe ../SimVascular-Windows.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows Installer
          path: SimVascular-Windows.exe
          if-no-files-found: error
      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: SimVascular-Windows.exe
          asset_name: SimVascular-${{github.ref_name}}-Windows.exe
          tag: ${{ github.ref }}
